<?xml version="1.0" encoding="UTF-8"?>
    <!--
        /* * Copyright 2008 the original author or authors. * * Licensed
        under the Apache License, Version 2.0 (the "License"); * you may
        not use this file except in compliance with the License. * You
        may obtain a copy of the License at * *
        http://www.apache.org/licenses/LICENSE-2.0 * * Unless required
        by applicable law or agreed to in writing, software *
        distributed under the License is distributed on an "AS IS"
        BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
        express or implied. * See the License for the specific language
        governing permissions and * limitations under the License. */

        @author Nick Zhu (nzhu@jointsource.com)
    -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

    <!-- Load system configuration from classpath conf file -->
    <context:property-placeholder location="classpath:hydra.conf" />

    <import resource="classpath:common-context.xml" />
    <import resource="classpath:data-bank-context.xml" />
    <import resource="classpath:data-partition-context.xml" />
    
    <bean id="channel" class="org.jgroups.JChannel">
        <constructor-arg type="java.net.URL" value="classpath:jgroups.xml" />
    </bean>

    <!-- HOP Space implementation -->
    <bean id="space" class="org.hydracache.server.harmony.jgroups.JGroupsSpace">
        <constructor-arg ref="serverId" />
        <constructor-arg ref="channel" />
        <constructor-arg ref="hashFunction" />
        <constructor-arg value="${hop.substanceSize}" />

        <property name="multiplexRecevier" ref="multiplexMessageReceiver" />
        <property name="membershipRegistry" ref="membershipRegistry" />
    </bean>

    <!-- HOP Space aware data bank decorator -->
    <bean id="hopDataBank"
        class="org.hydracache.server.harmony.storage.HarmonyDataBank">
        <constructor-arg ref="internalDataBank" />
        <constructor-arg ref="conflictResolver" />
        <constructor-arg ref="space" />
        
        <property name="expectedWrites" value="${hop.W}" />
    </bean>

    <!-- Space membership registry -->
    <bean id="membershipRegistry"
        class="org.hydracache.server.harmony.jgroups.JgroupsMembershipRegistry">
        <constructor-arg ref="space" />    
    </bean>

    <!-- Multiplex message receiver -->
    <bean id="multiplexMessageReceiver"
        class="org.hydracache.server.harmony.jgroups.MultiplexMessageReceiver">
        <constructor-arg ref="space" />
        <constructor-arg ref="membershipRegistry" />
        <constructor-arg ref="hopDataBank" />
        <constructor-arg value="${hop.substanceSize}" />
    </bean>
    
    <bean id="healthMonitor" class="org.hydracache.server.harmony.core.HealthMonitor">
        <constructor-arg ref="space" />
        <constructor-arg value="${hop.heartBeatInterval}" />
        <constructor-arg>
            <util:constant static-field="java.util.concurrent.TimeUnit.SECONDS"/>
        </constructor-arg>
    </bean>

</beans>